"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

if os.environ.get("SENTRY_DSN"):
    import sentry_sdk
    from sentry_sdk.integrations.django import DjangoIntegration

    sentry_sdk.init(
        dsn=os.environ.get("SENTRY_DSN"),
        integrations=[DjangoIntegration()],
        traces_sample_rate=0.2,
        profiles_sample_rate=0.5,
    )

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Base url
SITE_DOMAIN = os.environ.get("SITE_DOMAIN", "127.0.0.1")
BASE_URL = os.environ.get("BASE_URL", "http://127.0.0.1")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get(
    "SECRET_KEY", "django-insecure-gnv#q+ybobfpcyrx461ffdb==692qn(23o7eqwp-vhhv$s#%kn"
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "1") == "1"

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
    "api",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "server.middleware.thaliamiddleware.ThaliaMiddleware",
]

CORS_ORIGIN_ALLOW_ALL = DEBUG

ALLOWED_HOSTS = ["localhost", "localhost:5173"] if DEBUG else [SITE_DOMAIN]
CSRF_TRUSTED_ORIGIN = [BASE_URL]

ROOT_URLCONF = "server.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "server.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": (
        {
            "ENGINE": "django.db.backends.postgresql",
            "USER": os.environ.get("POSTGRES_USER"),
            "PASSWORD": os.environ.get("POSTGRES_PASSWORD"),
            "NAME": os.environ.get(
                "POSTGRES_DB",
            ),
            "HOST": os.environ.get("POSTGRES_HOST"),
            "PORT": os.environ.get("POSTGRES_PORT", "5432"),
            "CONN_MAX_AGE": 300,
        }
        if os.environ.get("POSTGRES_USER")
        else {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = (
    Path(os.environ.get("STATIC_ROOT"))
    if os.environ.get("STATIC_ROOT")
    else BASE_DIR / "static"
    # In docker: "/volumes/static"?
)

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

MEDIA_URL = "/media/"
MEDIA_ROOT = (
    Path(os.environ.get("MEDIA_ROOT"))
    if os.environ.get("MEDIA_ROOT")
    else BASE_DIR / "media"
    # In docker: "/volumes/media"
)


# https://github.com/johnsensible/django-sendfile#nginx-backend
SENDFILE_URL = "/media/sendfile/"
SENDFILE_ROOT = MEDIA_ROOT
SENDFILE_BACKEND = (
    os.environ.get("SENDFILE_BACKEND")
    if os.environ.get("SENDFILE_BACKEND")
    else "sendfile.backends.development"
    # In docker: "sendfile.backends.nginx"
)

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Base url for thalia requests
THALIA_BASE_URL = os.environ.get("THALIA_BASE_URL", "https://staging.thalia.nu")

CLIENT_ID = os.environ.get("CLIENT_ID") or "7xLk3gkoqC4ANdl9r7vAR19sxgEb5EIp5pVBgYfJ"

# Concrexit's OIDC public key.
RSA_PUB_KEY = (
    b"""-----BEGIN PUBLIC KEY-----
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxQEr+vEGdrRV/4SXhEIP
FYoJ+1FfYBPJ9WzOfqwrChYQH3BgmMlxvx70CcwvwtiRST2cKRY3+6Zb6TBIoupr
QrdJnCoAArNxgESjwaJqNca+Z7pc+NdC1RFidmtduPpXFpr4mCH+pQxL/Us8P7Wm
tP6WKJmLQi1eRpIKyToE25yjg4xmI9akjTg/doAElVbvy8F5Mz7s9zY9fFTy7J5d
BSgym40LtoRkteJuMRSCFGwqbG6wAMTDjQL2yw8MEibSJhxkckWiQZ4sWGy0K01a
i/v6RQ0CwP2Y1eYxdcgRCqzTHIc3mcOl2OWn300kpa9GGvD8bomJj4P0PjGBVrD2
flgrgDp6tbK7FpU4r+JKa95XuSAN7ApIByZxJA8ROz80WglI/NOnI2MVqdQ9eusN
0yzibL7DO1wZrGzOlSvInwfUUhyyNzwjzi7bm/VLizoZWEl3iGttKLVIbxBHhySe
lvNM/3xyQ00PAlAjenpyYzRi2SdAFequqkbhBmcSSTsKjPEFGkZ8UVSjkRipruHp
SkyyxHgIxBF3YP6bTX3oTnM/WJfbxcfY9iYZBghIMHKhe8+jrKt553+R/wqSRYM4
46vV+2YnX/ppcxTqVc+7dU0qEjrMh5PQs7DkxCtFcl3vloqXkZiq7fec8iPLY2EI
Xq+CXcRoZJka01034Ob+NRsCAwEAAQ==
-----END PUBLIC KEY-----
"""  # Production public key
    if THALIA_BASE_URL == "https://thalia.nu"
    else b"""-----BEGIN PUBLIC KEY-----
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAtb7GpVAek7o3w402eATz
UnywUFtMPoZWvZUmdOq70jiwB5LMT5jbkxwdHYd/+jLNw0dDiAM4HapAWzwB0+QC
ic3t5/vhG7tWb7PuZMzanQNfA5Fwit7A/Bf+/ghhA01Wrl2BpGiEsr0paKBe/Hzy
wN1UU6TnptoXi90S6HYLEyfu7iOXfLwLLtOHdxMHE5f5BEh1tYr7DrZyZ9SwBYG7
O0MqeRcohZfiL9k8FoVY/FhXR5qm3IBAtHswA2kYRqa97lyspc52vlp41Ck2YU5i
od9xPqAVis4eVfVryggSMT5in/Kwocf/Xh6xWX0SXR45dnfam/01XGRN8HcerNwg
S7531o/cDdyhoTPiEUrxZCUr72ZWoJoEqWb+pgaGYaS8ORr14kLRpkzzwEZ7qQQJ
dzX0L0+rkedYaKScYM1+gDDXN6a3vpYTVTUMNcOYQvRZolxIr7cwZq3PXcfrmdPF
pDE3fY5mBnjwTi0oWMQpaq2lGQbQ8itMyx4fS5cx2zMho87sjffgg77O0TAxPnco
l8mHpetjiE8RaCS119Wlti7FGt6MxSd5HzxwmHlpFhqDvq4gLJ5YUle+yP8fSucp
yJqu+n/NszOKb56O1ZycAN6Ezmt7YzNKAc3PvcFLN4AY/JJgilMQjJ/D4QFCC2t+
bGYS9RZ75FnbQ39FSzJbWfcCAwEAAQ==
-----END PUBLIC KEY-----
"""  # Staging public key
)
